<?xml version="1.0"?>
<!--
merge_point_clouds.launch: merge point clouds and visualize in rviz
Author: Ravi Joshi
Date: 2018/05/19
-->
<launch>
  <!-- rostopic for receving point cloud -->
  <arg name="pc1_topic" default="/kinect1/sd/points"/>
  <arg name="pc2_topic" default="/kinect2/sd/points"/>
  <arg name="pc3_topic" default="/kinect3/sd/points"/>

  <!-- ros topic name for publishing merged point cloud -->
  <arg name="merge_pc_topic" default="/merge_points"/>

  <!-- frame id of the base coordinate system -->
  <arg name="base_frame_id" default="base"/>

  <!-- frame id of the received point clouds -->
  <arg name="pc1_frame_id" default="kinect1_link"/>
  <arg name="pc2_frame_id" default="kinect2_link"/>
  <arg name="pc3_frame_id" default="kinect3_link"/>

  <!-- wait time (seconds) for tf buffer to acquire transforms -->
  <arg name="wait_time" default="2.0"/>

  <!-- frequency of publishing merged point cloud -->
  <arg name="freq" default="10"/>
  <node name="merge_point_clouds" pkg="multiple_kinect_baxter_calibration" type="merge_point_clouds" output="screen">
    <param name="pc1_topic" value="$(arg pc1_topic)"/>
    <param name="pc2_topic" value="$(arg pc2_topic)"/>
    <param name="pc3_topic" value="$(arg pc3_topic)"/>
    <param name="merge_pc_topic" value="$(arg merge_pc_topic)"/>
    <param name="base_frame_id" value="$(arg base_frame_id)"/>
    <param name="pc1_frame_id" value="$(arg pc1_frame_id)"/>
    <param name="pc2_frame_id" value="$(arg pc2_frame_id)"/>
    <param name="pc3_frame_id" value="$(arg pc3_frame_id)"/>
    <param name="wait_time" value="$(arg wait_time)"/>
    <param name="freq" value="$(arg freq)"/>
  </node>

  <include file="$(find multiple_kinect_baxter_calibration)/launch/kinects_visualization.launch"/>
  <node pkg="rviz" type="rviz" respawn="false" name="rviz" args="-d $(find multiple_kinect_baxter_calibration)/files/merge_pc.rviz"/>
</launch>
