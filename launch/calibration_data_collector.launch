<?xml version="1.0"?>
<!--
calibration_data_collector.launch: data recorder for calibration
Author: Ravi Joshi
Date: 2018/02/16
-->
<launch>
  <!-- set 'ar' to true for ar marker based calibration -->
  <arg name="ar" default="false"/>
  <arg name="marker_size" default="4.5"/>
  <arg name="marker_id" default="9"/>
  <arg name="max_track_error" default="0.2"/>
  <arg name="max_new_marker_error" default="0.08"/>
  <arg name="cam_image_topic" default="/kinect_anywhere/color_frame/image"/>
  <arg name="cam_info_topic" default="/kinect_anywhere/color_frame/camera_info"/>

  <!-- rostopic for receving point cloud -->
  <!-- libfreenect topic = /kinect2/sd/points -->
  <!-- kinect_anywhere topic = /kinect_anywhere/point_cloud/points2 -->
  <arg name="topic" doc="topic:=/kinect2/sd/points"/>

  <arg name="kinect_frame" default="/kinect1_link"/>

  <!-- limb used in calibration process -->
  <arg name="limb" default="right"/>

  <!-- log level parameter -->
  <!-- it should be one of the following- Info, Debug, Warn, Error, Fatal. -->
  <arg name="log" default="Debug"/>

  <!-- baxter arm pre-defined trajectory for various kinects -->
  <arg name="kinect1_trajectory" default="$(find multiple_kinect_baxter_calibration)/files/long.csv"/>
  <arg name="kinect2_trajectory" default="$(find multiple_kinect_baxter_calibration)/files/long.csv"/>
  <arg name="kinect3_trajectory" default="$(find multiple_kinect_baxter_calibration)/files/long.csv"/>
  <arg name="kinect_anywhere_trajectory" default="$(find multiple_kinect_baxter_calibration)/files/long.csv"/>
  <arg name="camera_trajectory" default="$(find multiple_kinect_baxter_calibration)/files/long.csv"/>

  <!-- minimum and maximum HSV values for sphere segmentation -->
  <!-- polystyrene green ball parameters -->
  <!-- the commented hsv values work most of the times
  <arg name="min_hsv" default="[40, 50, 60]"/>
  <arg name="max_hsv" default="[60, 200, 255]"/>
  -->
  <arg name="min_hsv" default="[40, 50, 60]"/>
  <arg name="max_hsv" default="[80, 200, 255]"/>

  <!--
  ###################################################################
  # FOLLOWING CONFIGURATIONS ARE USED IN 'SAC_RANSAC' USING         #
  # 'SACMODEL_NORMAL_SPHERE'. SEE BELOW URL FOR MORE INFO-          #
  # http://docs.pointclouds.org/1.7.0/group__sample__consensus.html #
  ###################################################################
  -->

  <!-- radius of sphere (in meter) -->
  <arg name="radius" default="0.05"/>

  <!-- length of stick to hold the sphere (in meter) -->
  <arg name="offset" default="0.0343"/>

  <!-- number of 'k' nearest neighbors to use for feature estimation -->
  <arg name="k_neighbors" default="10"/>

  <!-- normal angular distance weight -->
  <arg name="weight" default="0.05"/>

  <!-- maximum number of iterations before giving up -->
  <arg name="max_itr" default="1000"/>

  <!-- distance to the model threshold -->
  <arg name="d_thresh" default="0.005"/>

  <!-- probability of choosing at least one sample free from outliers -->
  <arg name="prob" default="0.99999"/>

  <!-- tolerance in radius (in meters) 1cm -->
  <arg name="tolerance" default="0.01"/>

  <!-- angle epsilon (delta) threshold (in degree) -->
  <arg name="epsilon" default="15"/>

  <!-- directory for saving tracking data -->
  <arg name="data_dir" default="$(find multiple_kinect_baxter_calibration)/files"/>

  <!-- queue_size for the subscribers (lesser is better) -->
  <arg name="queue_size" default="1"/>

  <!-- wait time to stablize arm before capturing point cloud (in seconds)-->
  <arg name="wait_time" default="2"/>

  <!-- wait time after capturing point cloud (in seconds)-->
  <arg name="loop_sleep" default="0.5"/>

  <!-- maximum number of samples to collect at any waypoint -->
  <arg name="max_samples" default="5"/>

  <!-- minimum z coordinate value of point cloud w.r.t. camera -->
  <arg name="min_z" default="0.5"/>

  <!-- maximum z coordinate value of point cloud w.r.t. camera -->
  <arg name="max_z" default="5.0"/>

  <!-- height of the title bar in point cloud visualizer window (in pixel) -->
  <arg name="title_bar_height" default="70"/>

  <node name="robot_controller" pkg="multiple_kinect_baxter_calibration" type="robot_controller.py" output="screen">
    <param name="topic" value="$(arg topic)"/>
    <param name="kinect1_trajectory" value="$(arg kinect1_trajectory)"/>
    <param name="kinect2_trajectory" value="$(arg kinect2_trajectory)"/>
    <param name="kinect3_trajectory" value="$(arg kinect3_trajectory)"/>
    <param name="kinect_anywhere_trajectory" value="$(arg kinect_anywhere_trajectory)"/>
    <param name="camera_trajectory" value="$(arg camera_trajectory)"/>
    <param name="radius" value="$(arg radius)"/>
    <param name="offset" value="$(arg offset)"/>
    <param name="limb" value="$(arg limb)"/>
  </node>

  <!-- point cloud based calibration -->
  <group unless="$(arg ar)">
    <node name="pc_data_collector" pkg="multiple_kinect_baxter_calibration" type="data_collector_pc" output="screen">
      <param name="min_hsv" value="$(arg min_hsv)"/>
      <param name="max_hsv" value="$(arg max_hsv)"/>
      <param name="radius" value="$(arg radius)"/>
      <param name="k_neighbors" value="$(arg k_neighbors)"/>
      <param name="weight" value="$(arg weight)"/>
      <param name="max_itr" value="$(arg max_itr)"/>
      <param name="d_thresh" value="$(arg d_thresh)"/>
      <param name="prob" value="$(arg prob)"/>
      <param name="tolerance" value="$(arg tolerance)"/>
      <param name="epsilon" value="$(arg epsilon)"/>
      <param name="limb" value="$(arg limb)"/>
      <param name="topic" value="$(arg topic)"/>
      <param name="data_dir" value="$(arg data_dir)"/>
      <param name="queue_size" value="$(arg queue_size)"/>
      <param name="wait_time" value="$(arg wait_time)"/>
      <param name="loop_sleep" value="$(arg loop_sleep)"/>
      <param name="max_samples" value="$(arg max_samples)"/>
      <param name="min_z" value="$(arg min_z)"/>
      <param name="max_z" value="$(arg max_z)"/>
      <param name="title_bar_height" value="$(arg title_bar_height)"/>
      <param name="log" value="$(arg log)"/>
    </node>
  </group>

  <!-- ar marker based calibration -->
  <group if="$(arg ar)">
    <!-- ar marker tracking using color image -->
    <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
      <param name="marker_size" type="double" value="$(arg marker_size)"/>
      <param name="max_new_marker_error" type="double" value="$(arg max_new_marker_error)"/>
      <param name="max_track_error" type="double" value="$(arg max_track_error)"/>
      <param name="output_frame" type="string" value="$(arg kinect_frame)"/>
      <remap from="camera_image" to="$(arg cam_image_topic)"/>
      <remap from="camera_info" to="$(arg cam_info_topic)"/>
    </node>

    <!-- rviz visualization -->
    <node pkg="rviz" type="rviz" respawn="false" name="rviz" args="-d $(find multiple_kinect_baxter_calibration)/files/ar_marker_vis.rviz"/>

    <!-- calibration using ar marker -->
    <node pkg="multiple_kinect_baxter_calibration" type="data_collector_ar.py" name="data_collector_ar" output="screen">
      <param name="cam_image_topic" value="$(arg cam_image_topic)"/>
      <param name="marker_id" type="double" value="$(arg marker_id)"/>
      <param name="limb" value="$(arg limb)"/>
      <param name="data_dir" value="$(arg data_dir)"/>
      <param name="wait_time" value="$(arg wait_time)"/>
      <param name="max_samples" value="$(arg max_samples)"/>
    </node>
  </group>
</launch>
