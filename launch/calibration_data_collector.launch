<?xml version="1.0"?>
<!--
calibration_data_collector.launch: data recorder for calibration
Author: Ravi Joshi
Date: 2018/02/16
-->
<launch>
  <!-- rostopic for receving point cloud -->
  <!-- libfreenect topic = /kinect1/sd/points -->
  <!-- kinect_anywhere topic = /kinect_anywhere/point_cloud/points2 -->
  <arg name="topic" doc="topic:=/kinect1/sd/points"/>

  <!-- baxter arm pre-defined trajectory for various kinect -->
  <arg name="kinect1_trajectory" default="$(find multiple_kinect_baxter_calibration)/files/viapoints.csv"/>
  <arg name="kinect2_trajectory" default="$(find multiple_kinect_baxter_calibration)/files/viapoints.csv"/>
  <arg name="kinect3_trajectory" default="$(find multiple_kinect_baxter_calibration)/files/viapoints.csv"/>
  <arg name="kinect_anywhere_trajectory" default="$(find multiple_kinect_baxter_calibration)/files/viapoints.csv"/>

  <!-- left/right limb used for calibration process -->
  <arg name="limb" default="right"/>
  <!-- wait time to stablize arm before capturing point cloud (seconds)-->
  <arg name="wait_time" default="2"/>
  <node name="baxter_controller" pkg="multiple_kinect_baxter_calibration" type="baxter_controller.py" output="screen">
    <param name="topic" value="$(arg topic)"/>
    <param name="kinect1_trajectory" value="$(arg kinect1_trajectory)"/>
    <param name="kinect2_trajectory" value="$(arg kinect2_trajectory)"/>
    <param name="kinect3_trajectory" value="$(arg kinect3_trajectory)"/>
    <param name="kinect_anywhere_trajectory" value="$(arg kinect_anywhere_trajectory)"/>
    <param name="limb" value="$(arg limb)"/>
    <param name="wait_time" value="$(arg wait_time)"/>
  </node>

  <!-- minimum and maximum HSV values for sphere segmentation -->
  <!-- polystyrene green ball parameters -->
  <arg name="min_hsv" default="[40, 50, 60]"/>
  <arg name="max_hsv" default="[60, 200, 255]"/>

  <!--
  ###################################################################
  # FOLLOWING CONFIGURATIONS ARE USED IN 'SAC_RANSAC' USING         #
  # 'SACMODEL_NORMAL_SPHERE'. SEE BELOW URL FOR MORE INFO-          #
  # http://docs.pointclouds.org/1.7.0/group__sample__consensus.html #
  ###################################################################
  -->
  <!-- radius of sphere (in meter) -->
  <arg name="radius" default="0.05"/>
  <!-- length of stick to hold the sphere (in meter) -->
  <arg name="offset" default="0.0343"/>
  <!-- number of 'k' nearest neighbors to use for feature estimation -->
  <arg name="k_neighbors" default="10"/>
  <!-- normal angular distance weight -->
  <arg name="weight" default="0.05"/>
  <!-- maximum number of iterations before giving up -->
  <arg name="max_itr" default="1000"/>
  <!-- distance to the model threshold -->
  <arg name="d_thresh" default="0.005"/>
  <!-- probability of choosing at least one sample free from outliers -->
  <arg name="prob" default="0.99999"/>
  <!-- tolerance in radius (in meters) 1cm -->
  <arg name="tolerance" default="0.01"/>
  <!-- angle epsilon (delta) threshold (in degree) -->
  <arg name="epsilon" default="15"/>
  <!-- directory for saving collected data -->
  <arg name="data_dir" default="$(find multiple_kinect_baxter_calibration)/files"/>
  <!-- queue_size for subscriber -->
  <arg name="queue_size" default="2"/>
  <node name="data_collector" pkg="multiple_kinect_baxter_calibration" type="data_collector" output="screen">
    <param name="min_hsv" value="$(arg min_hsv)"/>
    <param name="max_hsv" value="$(arg max_hsv)"/>
    <param name="radius" value="$(arg radius)"/>
    <param name="offset" value="$(arg offset)"/>
    <param name="k_neighbors" value="$(arg k_neighbors)"/>
    <param name="weight" value="$(arg weight)"/>
    <param name="max_itr" value="$(arg max_itr)"/>
    <param name="d_thresh" value="$(arg d_thresh)"/>
    <param name="prob" value="$(arg prob)"/>
    <param name="tolerance" value="$(arg tolerance)"/>
    <param name="epsilon" value="$(arg epsilon)"/>
    <param name="limb" value="$(arg limb)"/>
    <param name="topic" value="$(arg topic)"/>
    <param name="data_dir" value="$(arg data_dir)"/>
    <param name="queue_size" value="$(arg queue_size)"/>
  </node>
</launch>
